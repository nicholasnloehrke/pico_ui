/**
 * @file ili9486_driver.h
 * @author Nicholas Loehrke (nicholasnloehrke@gmail.com)
 * @brief
 * @version 1.0.0
 * @date 2024-12-28
 *
 * MIT License
 *
 * Copyright (c) 2024 Nicholas Loehrke
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

#ifndef ILI9486_DRIVER_D04FAFCD_C748_4FD5_BBAF_DFF587468E9E
#define ILI9486_DRIVER_D04FAFCD_C748_4FD5_BBAF_DFF587468E9E

#include <stdint.h>
#include <stdlib.h>

// regular command set
#define ILI9486_CMD_NOP 0x00
#define ILI9486_CMD_SOFT_RESET 0x01
#define ILI9486_CMD_READ_DISPLAY_IDENTIFICATION_INFORMATION 0x04
#define ILI9486_CMD_READ_NUMBER_OF_THE_ERRORS_ON_DSI 0x05
#define ILI9486_CMD_READ_DISPLAY_STATUS 0x09
#define ILI9486_CMD_READ_DISPLAY_POWER_MODE 0x0A
#define ILI9486_CMD_READ_DISPLAY_MADCTL 0x0B
#define ILI9486_CMD_READ_PIXEL_FORMAT 0x0C
#define ILI9486_CMD_READ_DISPLAY_IMAGE_MODE 0x0D
#define ILI9486_CMD_READ_DISPLAY_SIGNAL_MODE 0x0E
#define ILI9486_CMD_READ_DISPLAY_SELF_DIAGNOSTIC_RESULT 0x0F
#define ILI9486_CMD_SLEEP_IN 0x10
#define ILI9486_CMD_SLEEP_OUT 0x11
#define ILI9486_CMD_PARTIAL_MODE_ON 0x12
#define ILI9486_CMD_NORMAL_DISPLAY_MODE_ON 0x13
#define ILI9486_CMD_DISPLAY_INVERSION_OFF 0x20
#define ILI9486_CMD_DISPLAY_INVERSION_ON 0x21
#define ILI9486_CMD_DISPLAY_OFF 0x28
#define ILI9486_CMD_DISPLAY_ON 0x29
#define ILI9486_CMD_COLUMN_ADDRESS_SET 0x2A
#define ILI9486_CMD_PAGE_ADDRESS_SET 0x2B
#define ILI9486_CMD_MEMORY_WRITE 0x2C
#define ILI9486_CMD_MEMORY_READ 0x2E
#define ILI9486_CMD_PARTIAL_AREA 0x30
#define ILI9486_CMD_VERTICAL_SCROLLING_DEFINITION 0x33
#define ILI9486_CMD_TEARING_EFFECT_LINE_OFF 0x34
#define ILI9486_CMD_TEARING_EFFECT_LINE_ON 0x35
#define ILI9486_CMD_MEMORY_ACCESS_CONTROL 0x36
#define ILI9486_CMD_VERTICAL_SCROLLING_START_ADDRESS 0x37
#define ILI9486_CMD_IDLE_MODE_OFF 0x38
#define ILI9486_CMD_IDLE_MODE_ON 0x39
#define ILI9486_CMD_INTERFACE_PIXEL_FORMAT 0x3A
#define ILI9486_CMD_MEMORY_WRITE_CONTINUE 0x3C
#define ILI9486_CMD_MEMORY_READ_CONTINUE 0x3E
#define ILI9486_CMD_WRITE_TEAR_SCAN_LINE 0x44
#define ILI9486_CMD_READ_TEAR_SCAN_LINE 0x45
#define ILI9486_CMD_WRITE_DISPLAY_BRIGHTNESS_VALUE 0x51
#define ILI9486_CMD_READ_DISPLAY_BRIGHTNESS_VALUE 0x52
#define ILI9486_CMD_WRITE_CTRL_DISPLAY_VALUE 0x53
#define ILI9486_CMD_READ_CTRL_DISPLAY_VALUE 0x54
#define ILI9486_CMD_WRITE_CONTENT_ADAPTIVE_BRIGHTNESS_CONTROL_VALUE 0x55
#define ILI9486_CMD_READ_CONTENT_ADAPTIVE_BRIGHTNESS_CONTROL_VALUE 0x56
#define ILI9486_CMD_WRITE_CABC_MINIMUM_BRIGHTNESS 0x5E
#define ILI9486_CMD_READ_CABC_MINIMUM_BRIGHTNESS 0x5F
#define ILI9486_CMD_READ_FIRST_CHECKSUM 0xAA
#define ILI9486_CMD_READ_CONTINUE_CHECKSUM 0xAF
#define ILI9486_CMD_READ_ID1 0xDA
#define ILI9486_CMD_READ_ID2 0xDB
#define ILI9486_CMD_READ_ID3 0xDC

// extended command set
#define ILI9486_CMD_INTERFACE_MODE_CONTROL 0xB0
#define ILI9486_CMD_FRAME_RATE_CONTROL_IN_NORMAL_MODE_FULL_COLORS 0xB1
#define ILI9486_CMD_FRAME_RATE_CONTROL_IN_IDLE_MODE_8_COLORS 0xB2
#define ILI9486_CMD_FRAME_RATE_CONTROL_IN_PARTIAL_MODE_FULL_COLORS 0xB3
#define ILI9486_CMD_DISPLAY_INVERSION_CONTROL 0xB4
#define ILI9486_CMD_BLANKING_PORCH_CONTROL 0xB5
#define ILI9486_CMD_DISPLAY_FUNCTION_CONTROL 0xB6
#define ILI9486_CMD_ENTRY_MODE_SET 0xB7
#define ILI9486_CMD_POWER_CONTROL_1 0xC0
#define ILI9486_CMD_POWER_CONTROL_2 0xC1
#define ILI9486_CMD_POWER_CONTROL_3 0xC2
#define ILI9486_CMD_POWER_CONTROL_4 0xC3
#define ILI9486_CMD_POWER_CONTROL_5 0xC4
#define ILI9486_CMD_VCOM_CONTROL_1 0xC5
#define ILI9486_CMD_CABC_CONTROL_1 0xC6
#define ILI9486_CMD_CABC_CONTROL_2 0xC8
#define ILI9486_CMD_CABC_CONTROL_3 0xC9
#define ILI9486_CMD_CABC_CONTROL_4 0xCA
#define ILI9486_CMD_CABC_CONTROL_5 0xCB
#define ILI9486_CMD_CABC_CONTROL_6 0xCC
#define ILI9486_CMD_CABC_CONTROL_7 0xCD
#define ILI9486_CMD_CABC_CONTROL_8 0xCE
#define ILI9486_CMD_CABC_CONTROL_9 0xCF
#define ILI9486_CMD_NV_MEMORY_WRITE 0xD0
#define ILI9486_CMD_NV_MEMORY_PROTECTION_KEY 0xD1
#define ILI9486_CMD_NV_MEMORY_STATUS_READ 0xD2
#define ILI9486_CMD_READ_ID4 0xD3
#define ILI9486_CMD_PGAMCTRL_POSITIVE_GAMMA_CONTROL 0xE0
#define ILI9486_CMD_NGAMCTRL_NEGATIVE_GAMMA_CONTROL 0xE1
#define ILI9486_CMD_DIGITAL_GAMMA_CONTROL_1 0xE2
#define ILI9486_CMD_DIGITAL_GAMMA_CONTROL_2 0xE3
#define ILI9486_CMD_SPI_READ_COMMAND_SETTING 0xFB

typedef struct
{
    void (*cs_active)();
    void (*cs_idle)();
    void (*hard_reset)();
    void (*write_command)(uint8_t cmd);
    void (*write_data)(uint16_t data);
    void (*write_data_buffer)(uint16_t *buffer, size_t length);
    void (*delay_ms)(uint32_t ms);
} ili9486_hal_t;

typedef struct
{
    uint32_t width;
    uint32_t height;
    ili9486_hal_t *hal;
} ili9486_t;

int ili9486_init(ili9486_t *display);
int ili9486_set_pixel(ili9486_t *display, uint32_t x, uint32_t y, uint16_t color);
int ili9486_set_area(ili9486_t *display, uint32_t x, uint32_t y, uint32_t width, uint32_t height, uint16_t *color_buffer);

#endif // ILI9486_DRIVER_D04FAFCD_C748_4FD5_BBAF_DFF587468E9E
